---
import { Icon } from 'astro-icon/components'

// define the possible theme states
const themes = [
  { name: 'light', icon: 'solar:sun-outline', theme: 'casper' },
  { name: 'dark', icon: 'solar:moon-outline', theme: 'laramie' },
  { name: 'system', icon: 'solar:monitor-outline', theme: 'system' },
] as const
---

<div class="dropdown dropdown-end">
  <button
    id="theme-toggle"
    class="relative h-[2.1rem] w-[2.1rem] rounded-lg border border-base-content/25 bg-transparent hover:bg-neutral hover:text-primary p-1 transition-colors duration-200 flex items-center justify-center"
    aria-label="Toggle color theme"
  >
    {themes.map(({ name, icon }) => (
      <Icon
        name={icon}
        class="absolute size-4 transition-opacity duration-300"
        data-theme-icon={name}
        aria-hidden="true"
      />
    ))}
  </button>
</div>

<script>
// theme management utilities
const themeUtils = {
  getSystemTheme() {
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
  },

  getThemePreference() {
    return localStorage.getItem('theme-preference') || 'system'
  },

  setTheme(preference: 'light' | 'dark' | 'system') {
    const theme = preference === 'system' ? this.getSystemTheme() : preference
    const themeValue = theme === 'dark' ? 'laramie' : 'casper'

    // update DOM
    document.documentElement.classList.toggle('dark', theme === 'dark')
    document.documentElement.setAttribute('data-theme', themeValue)

    // update icons
    document.querySelectorAll('[data-theme-icon]').forEach((icon) => {
      icon.classList.toggle('opacity-0', icon.getAttribute('data-theme-icon') !== preference)
    })

    // save preference
    localStorage.setItem('theme-preference', preference)
  },

  initialize() {
    // set up system theme change listener
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')
    mediaQuery.addEventListener('change', (_e) => {
      if (this.getThemePreference() === 'system') {
        this.setTheme('system')
      }
    })

    // initial theme setup
    this.setTheme(this.getThemePreference() as 'light' | 'dark' | 'system')
  },
}

// initialize on page load
themeUtils.initialize()

// handle theme toggle clicks
document.getElementById('theme-toggle')?.addEventListener('click', () => {
  const currentPreference = themeUtils.getThemePreference()
  const nextTheme = {
    light: 'dark',
    dark: 'system',
    system: 'light',
  }[currentPreference] as 'light' | 'dark' | 'system'

  themeUtils.setTheme(nextTheme)
})

// handle astro page transitions
document.addEventListener('astro:after-swap', () => {
  themeUtils.setTheme(themeUtils.getThemePreference() as 'light' | 'dark' | 'system')
})
</script>

<style>
/* Remove previous styles that were hiding icons */
</style>
