---
import { Breadcrumbs as AstroBreadcrumbs } from 'astro-breadcrumbs'
import { Icon } from 'astro-icon/components'
import 'astro-breadcrumbs/breadcrumbs.css'

interface Props {
  indexText?: string
  mainBemClass?: string
  customBaseUrl?: string
  ariaLabel?: string
  truncated?: boolean
}

const {
  indexText = 'Home',
  mainBemClass = 'c-breadcrumbs',
  customBaseUrl,
  ariaLabel = 'Breadcrumb navigation',
  truncated = false,
} = Astro.props

const isHomePage = Astro.url.pathname === '/'
const pathSegments = Astro.url.pathname.split('/').filter(Boolean)

const visibleSegments = pathSegments.slice(-2)
---

<div class:list={[isHomePage && 'sr-only']}>
  <AstroBreadcrumbs
    indexText={indexText}
    mainBemClass={mainBemClass}
    customBaseUrl={customBaseUrl}
    truncated={truncated}
    ariaLabel={ariaLabel}
    schemaJsonScript={true}
    customizeLinks={[
      {
        text: 'Home',
        ariaLabel: 'Navigate to homepage',
      },
      ...visibleSegments.map((segment) => ({
        text: segment,
        ariaLabel: `Navigate to ${segment.replace(/-/g, ' ')}`,
      })),
    ]}
    customizeNav={{
      'aria-label': ariaLabel,
    }}
  >
    <span slot='separator' aria-hidden='true' class='text-base-content'>
      /
    </span>
    <span slot='index' class='inline-flex items-center'>
      <Icon
        name='lucide:house'
        class='stroke-[5] text-base-content decoration-primary/50 transition-all duration-200 hover:text-primary hover:underline hover:decoration-2'
        size='0.85rem'
        aria-hidden='true'
      />
      <span class='sr-only'>Home</span>
    </span>
  </AstroBreadcrumbs>
</div>

<script>
  function updateBreadcrumbs() {
    const breadcrumbsContainer = document.querySelector('.c-breadcrumbs')
    if (breadcrumbsContainer) {
      const pathname = window.location.pathname
      breadcrumbsContainer.setAttribute('data-path', pathname)
      const height = (breadcrumbsContainer as HTMLElement).offsetHeight
      return height
    }
  }

  document.addEventListener('astro:page-load', updateBreadcrumbs)
  document.addEventListener('astro:after-swap', updateBreadcrumbs)
</script>

<style>
  :global(.c-breadcrumbs) {
    @apply text-xs text-base-content;
  }

  :global(.c-breadcrumbs__link) {
    @apply relative text-base-content underline decoration-primary/50 decoration-2 transition-colors duration-200 hover:text-primary;
  }

  :global(.c-breadcrumbs__link) {
    @apply after:absolute after:bottom-0 after:left-0 after:h-px after:w-full after:bg-primary after:opacity-0 after:transition-opacity after:duration-200;
  }

  :global(.c-breadcrumbs__link:hover) {
    @apply text-primary after:opacity-100;
  }

  :global(.c-breadcrumbs__crumb:last-child) {
    @apply text-base-content;
  }

  :global(.c-breadcrumbs__truncated-button) {
    @apply transition-colors duration-200 hover:text-primary;
  }
</style>
