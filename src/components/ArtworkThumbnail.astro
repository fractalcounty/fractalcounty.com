---
import type { ImageMetadata } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { THUMBNAIL_SIZES } from '@/lib/image'
import { Picture } from 'astro:assets'

interface Props {
  artwork: CollectionEntry<'artwork'>
  size: keyof typeof THUMBNAIL_SIZES
  index?: number
}

const { artwork, size, index = 0 } = Astro.props

// get the first image if it's an array
const image = Array.isArray(artwork.data.images)
  ? artwork.data.images[0]
  : artwork.data.images

// use custom thumbnail if available
const thumbnailImage = artwork.data.thumbnail ?? image

if (!thumbnailImage) {
  throw new Error(`Thumbnail image is undefined for artwork: ${artwork.id}`)
}

// improve accessibility
const imgTitle = `${artwork.data.title} - ${artwork.data.description}`

// get dimensions from THUMBNAIL_SIZES
const { width, height } = THUMBNAIL_SIZES[size]

// handle custom thumbnails vs regular images
const hasCustomThumbnail =
  'thumbnail' in artwork.data && artwork.data.thumbnail !== undefined
---

<Picture
  src={thumbnailImage as ImageMetadata}
  alt={imgTitle}
  title={imgTitle}
  formats={hasCustomThumbnail ? ['webp'] : ['avif', 'webp']}
  width={width}
  height={height}
  class='h-full w-full object-cover transition-transform duration-500 group-hover:scale-105'
  loading={index === 0 ? 'eager' : 'lazy'}
  decoding={index === 0 ? 'sync' : 'async'}
  fetchpriority={index === 0 ? 'high' : 'auto'}
/>
