---
import Date from '@/components/Date.astro'
import Link from '@/components/Link.astro'
import { Icon } from 'astro-icon/components'

interface GitHubEvent {
  type: string
  repo: {
    name: string
    url: string
  }
  payload: {
    commits: Array<{
      sha: string
      message: string
      author: {
        name: string
        email: string
      }
    }>
  }
  created_at: string
}

interface Commit {
  sha: string
  message: string
  date: string
  repository: {
    name: string
    url: string
  }
  html_url: string
}

// fetch latest commits from github api
async function getLatestCommits(
  username: string,
  limit = 3,
): Promise<Commit[]> {
  try {
    const response = await fetch(
      `https://api.github.com/users/${username}/events/public`,
    )

    if (!response.ok) {
      throw new Error(`GitHub API responded with ${response.status}`)
    }

    const events: GitHubEvent[] = await response.json()

    // filter push events and extract commits
    const commits = events
      .filter((event) => event.type === 'PushEvent')
      .flatMap((event) =>
        event.payload.commits.map((commit) => ({
          sha: commit.sha,
          message: commit.message,
          date: event.created_at,
          repository: {
            name: event.repo.name,
            url: event.repo.url.replace('api.github.com/repos', 'github.com'),
          },
          html_url: `${event.repo.url.replace('api.github.com/repos', 'github.com')}/commit/${commit.sha}`,
        })),
      )
      .slice(0, limit)

    return commits
  } catch (error) {
    console.error('error fetching github commits:', error)
    return []
  }
}

const commits = await getLatestCommits('fractalcounty')
---

<ul class='flex flex-col gap-4'>
  {
    commits.length > 0 ?
      commits.map((commit) => (
        <li>
          <Link
            href={commit.html_url}
            class='group flex flex-col items-start gap-1 rounded-lg bg-theme-800 p-3 shadow-md outline outline-theme-500 transition-all duration-200 hover:bg-theme-700 hover:shadow-lg hover:outline-theme-accent/75'
            externalInNewTab={true}
            underline={false}>
            <div class='flex items-center gap-2 text-sm text-theme-200 transition-all duration-200 hover:text-theme-100'>
              <Icon
                name='lucide:code'
                size='1rem'
                class='text-theme-300 transition-all duration-200 group-hover:text-theme-200'
              />
              <span class='font-medium text-theme-200 transition-all duration-200 group-hover:text-theme-100'>
                {commit.repository.name.split('/')[1]} â€¢
                <span class='font-normal text-theme-300 transition-all duration-200 group-hover:text-theme-200'>
                  <Date
                    date={new globalThis.Date(commit.date)}
                    format='short'
                  />
                </span>
              </span>
            </div>
            <p class='line-clamp-2 text-sm text-theme-300 transition-all duration-200 group-hover:text-theme-200'>
              {commit.message}
            </p>
          </Link>
        </li>
      ))
    : <li class='text-sm text-theme-content'>No recent commits found</li>
  }
</ul>
