---
import { Icon } from 'astro-icon/components'
import Link from './Link.astro'

interface GitHubEvent {
  type: string
  repo: {
    name: string
    url: string
  }
  payload: {
    commits: Array<{
      sha: string
      message: string
      author: {
        name: string
        email: string
      }
    }>
  }
  created_at: string
}

// fetch latest commits from github api
async function getLatestCommits(username: string, limit = 3) {
  try {
    const response = await fetch(
      `https://api.github.com/users/${username}/events/public`
    )

    if (!response.ok) {
      throw new Error(`GitHub API responded with ${response.status}`)
    }

    const events: GitHubEvent[] = await response.json()

    // filter push events and extract commits
    const commits = events
      .filter((event) => event.type === 'PushEvent')
      .flatMap((event) =>
        event.payload.commits.map((commit) => ({
          sha: commit.sha,
          message: commit.message,
          date: event.created_at,
          repository: {
            name: event.repo.name,
            url: event.repo.url.replace('api.github.com/repos', 'github.com'),
          },
          html_url: `${event.repo.url.replace('api.github.com/repos', 'github.com')}/commit/${commit.sha}`,
        }))
      )
      .slice(0, limit)

    return commits
  } catch (error) {
    console.error('error fetching github commits:', error)
    return []
  }
}

const commits = await getLatestCommits('fractalcounty')
---

<div class='space-y-6'>
  <div class='flex flex-wrap items-center justify-between'>
    <h2 class='title font-bold uppercase'>Recent commits</h2>
    <Link
      href='https://github.com/fractalcounty'
      title='GitHub Profile'
      externalInNewTab={true}
    >
      See all activity
    </Link>
  </div>

  <ul class='flex flex-col gap-4'>
    {
      commits.length > 0 ? (
        commits.map((commit) => (
          <li class='animate'>
            <Link
              href={commit.html_url}
              class='hover:bg-neutral-focus group flex flex-col gap-1 rounded-lg border border-base-content/25 bg-transparent p-3 transition-all duration-200 hover:bg-neutral'
              externalInNewTab={true}
              underline={false}
            >
              <div class='flex items-center gap-2 text-sm text-accent-content'>
                <Icon name='lucide:code' size='1rem' />
                <span class='font-medium'>
                  {commit.repository.name.split('/')[1]} â€¢
                  <span class='font-normal opacity-75'>
                    {new Date(commit.date).toLocaleDateString('en-US', {
                      month: 'short',
                      day: 'numeric',
                      year: 'numeric',
                    })}
                  </span>
                </span>
              </div>
              <p class='line-clamp-2 text-sm'>{commit.message}</p>
            </Link>
          </li>
        ))
      ) : (
        <li class='text-sm text-accent-content'>No recent commits found</li>
      )
    }
  </ul>
</div>
