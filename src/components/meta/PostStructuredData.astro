---
import type { CollectionEntry } from 'astro:content'
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  organizationSchema,
  personSchema,
  websiteSchema,
} from '@/lib/schema'

interface Props {
  entry: CollectionEntry<'blog'>
  type: 'blog'
}

const { entry } = Astro.props
const pageUrl = new URL(Astro.url.pathname, Astro.site)

// construct the opengraph image url - it will be next to the index.html
const ogImageUrl = new URL(
  `${Astro.url.pathname}/index.png`,
  Astro.site
).toString()

// create breadcrumb trail
const breadcrumbItems = [
  { name: 'Home', item: new URL('/', Astro.site).toString() },
  { name: 'Blog', item: new URL('/blog', Astro.site).toString() },
  { name: entry.data.title, item: pageUrl.toString() },
]

const schema = {
  '@context': 'https://schema.org',
  '@graph': [
    generateArticleSchema(entry, pageUrl, ogImageUrl),
    generateBreadcrumbSchema(breadcrumbItems),
    {
      '@type': 'WebPage',
      '@id': pageUrl.toString(),
      url: pageUrl.toString(),
      name: entry.data.title,
      description: entry.data.description,
      isPartOf: {
        '@id': 'https://fractalcounty.com/#website',
      },
      primaryImageOfPage: {
        '@id': `${pageUrl.toString()}#primaryimage`,
      },
      breadcrumb: {
        '@id': `${pageUrl.toString()}#breadcrumb`,
      },
      inLanguage: 'en-US',
    },
    {
      '@type': 'ImageObject',
      '@id': `${pageUrl.toString()}#primaryimage`,
      url: ogImageUrl,
      width: 1200,
      height: 630,
    },
    websiteSchema,
    organizationSchema,
    personSchema,
  ],
}
---

<script type='application/ld+json' set:html={JSON.stringify(schema)} />
