---
import type { CollectionEntry } from 'astro:content'
import { generateArticleSchema, generateBreadcrumbSchema, organizationSchema, personSchema, websiteSchema } from '@/lib/schema'
import { getImagePath } from 'astro-opengraph-images'

interface Props {
  entry: CollectionEntry<'blog' | 'projects'>
}

const { entry } = Astro.props
const pageUrl = new URL(Astro.url.pathname, Astro.site)
const ogImageUrl = getImagePath({ url: Astro.url, site: Astro.site })

// ensure breadcrumbs match the actual site structure
const breadcrumbItems = [
  { name: 'Home', item: 'https://fractalcounty.com/' },
  {
    name: entry.data.type === 'project' ? 'Projects' : 'Blog',
    item: `https://fractalcounty.com/${entry.data.type === 'project' ? 'projects' : 'blog'}/`,
  },
  {
    name: entry.data.title,
    item: pageUrl.toString(),
  },
]

const schema = {
  '@context': 'https://schema.org',
  '@graph': [
    generateArticleSchema(entry, pageUrl),
    generateBreadcrumbSchema(breadcrumbItems),
    {
      '@type': 'ImageObject',
      '@id': `${pageUrl.toString()}#primaryimage`,
      'url': ogImageUrl,
      'width': 1200,
      'height': 630,
      'contentUrl': ogImageUrl,
    },
    websiteSchema,
    organizationSchema,
    personSchema,
  ],
}
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
