---
import ArrowCard from '@/components/ArrowCard.astro'
import Subheader from '@/components/layout/Subheader.astro'
import CollectionPageStructuredData from '@/components/meta/CollectionPageStructuredData.astro'
import ProfilePageStructuredData from '@/components/meta/ProfilePageStructuredData.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

const blogPosts = (await getCollection('blog')).filter(
  (post) => !post.data.draft
)

const allPosts = [...blogPosts].sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
)

type Acc = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = allPosts.reduce((acc: Acc, post) => {
  const year = post.data.publishDate.getFullYear().toString()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const years = Object.keys(posts).sort(
  (a, b) => Number.parseInt(b) - Number.parseInt(a)
)
---

<PageLayout
  title={site.pages.blog.title}
  description={site.pages.blog.description}
>
  <CollectionPageStructuredData
    slot='structured-data'
    type='blog'
    name={site.pages.blog.title}
    description={site.pages.blog.description}
  />
  <ProfilePageStructuredData slot='structured-data' />
  <section>
    <div class='space-y-10'>
      <Subheader title='Blog' subtitle='thoughts and ideas' />
      <div class='space-y-4'>
        {
          years.map((year) => (
            <section class='animate'>
              <div class='divider divider-start my-8 font-medium text-base-content/75'>
                {year}
              </div>
              <div>
                <ul class='flex flex-col gap-4'>
                  {posts[year].map((post) => (
                    <li>
                      <article class='post-preview'>
                        <ArrowCard
                          title={post.data.title}
                          description={post.data.description}
                          icon={post.data.icon}
                          href={`/blog/${post.id.replace(/\/index\.mdx$|\.mdx$/, '')}`}
                          date={post.data.publishDate}
                        />
                      </article>
                    </li>
                  ))}
                </ul>
              </div>
            </section>
          ))
        }
      </div>
    </div>
  </section>
</PageLayout>
