---
import Image from '@/components/content/ContentImage.astro'
import ContentHeading from '@/components/ContentHeading.astro'
import Link from '@/components/Link.astro'
import PostStructuredData from '@/components/meta/PostStructuredData.astro'
import Prose from '@/components/Prose.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { readingTime } from '@/lib/utils'
import { getCollection, render } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('blog')
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: {
        slug: post.id.replace(/\/index\.mdx$|\.mdx$/, ''),
      },
      props: { post },
    }))
}

const { post } = Astro.props
const { Content } = await render(post)
---

<PageLayout
  title={post.data.title}
  description={post.data.description}
  type='article'
  publishDate={post.data.publishDate}
  updatedDate={post.data.updatedDate}
  tags={post.data.tags}
  isContentPage={true}>
  <PostStructuredData slot='structured-data' entry={post} type='blog' />
  <section>
    <ContentHeading
      title={post.data.title}
      subtitle={post.data.subtitle || post.data.description}
      publishDate={post.data.publishDate}
      updatedDate={post.data.updatedDate}
      readingTime={readingTime(post.body || '')}
      links={post.data.links}
      collection='blog'
    />

    {
      post.data.thumbnail && (
        <div class='mb-10 mt-4'>
          <Image
            src={post.data.thumbnail}
            title={post.data.title}
            collection='blog'
            style={post.data.thumbnailStyle ?? true}
            alt={post.data.thumbnailCaption}
            captionType={post.data.thumbnailCaptionType ?? 'alt'}
            loading='eager'
          />
        </div>
      )
    }

    <article id='main-content' class='overflow-x-hidden'>
      <Prose>
        <Content components={{ a: Link, img: Image }} />
      </Prose>
    </article>
  </section>
</PageLayout>
