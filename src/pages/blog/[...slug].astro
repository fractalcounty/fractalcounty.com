---
import Image from '@/components/content/ContentImage.astro'
import Subheader from '@/components/layout/Subheader.astro'
import Link from '@/components/Link.astro'
import PostStructuredData from '@/components/meta/PostStructuredData.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { readingTime } from '@/lib/utils'
import { getCollection, render } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('blog')
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: {
        slug: post.id.replace(/\/index\.mdx$|\.mdx$/, ''),
      },
      props: { post },
    }))
}

const { post } = Astro.props
const { Content } = await render(post)
---

<PageLayout
  title={post.data.title}
  description={post.data.description}
  type='article'
  publishDate={post.data.publishDate}
  updatedDate={post.data.updatedDate}
  tags={post.data.tags}
  isContentPage={true}
>
  <PostStructuredData slot='structured-data' entry={post} type='blog' />
  <section>
    <Subheader
      title={post.data.title}
      publishDate={post.data.publishDate}
      updatedDate={post.data.updatedDate}
      readingTime={readingTime(post.body || '')}
      backUrl='/blog'
      backLabel='Back'
      isPost={true}
      links={post.data.links}
    />

    <article id='main-content'>
      {
        post.data.thumbnail && (
          <Image
            src={post.data.thumbnail}
            title={post.data.title}
            collection='blog'
            style={post.data.thumbnailStyle ?? true}
            alt={post.data.thumbnailCaption}
            captionType={post.data.thumbnailCaptionType ?? 'alt'}
            class='animate'
            loading='eager'
          />
        )
      }
      <div class='animate'>
        <Content components={{ a: Link, img: Image }} />
      </div>
    </article>
  </section>
</PageLayout>
