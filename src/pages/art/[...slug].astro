---
import Container from '@/components/layout/Container.astro'
import Subheader from '@/components/layout/Subheader.astro'
import WebcomicViewer from '@/components/WebcomicViewer.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { Image } from 'astro:assets'
import { type CollectionEntry, getCollection } from 'astro:content'

export async function getStaticPaths() {
  const artworks = (await getCollection('artwork'))
    .filter(artwork => !artwork.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  return artworks.map(artwork => ({
    params: { slug: artwork.slug },
    props: artwork,
  }))
}
type Props = CollectionEntry<'artwork'>

const artwork = Astro.props
const { Content } = await artwork.render()
const links = artwork.data.links || []

// Preload the first image
const firstImage = Array.isArray(artwork.data.images)
  ? artwork.data.images[0]
  : artwork.data.images
---

<PageLayout
  title={artwork.data.title}
  description={artwork.data.description}
  type="article"
  publishedTime={artwork.data.date}
  isWebcomic={artwork.data.type === 'webcomic'}
  isContentPage={true}
>
  <!-- Preload first image -->
  <link
    rel="preload"
    as="image"
    href={firstImage.src}
    slot="head"
  />

  <Container class:list={[
    artwork.data.type === 'webcomic' && 'max-w-5xl px-2 md:px-4',
  ]}
  >
    <div class:list={[
      'animate',
      artwork.data.type === 'webcomic' && 'md:fixed md:top-4 md:left-4 md:z-30',
    ]}
    >
    </div>

    <div class:list={[
      'my-6',
      artwork.data.type === 'webcomic' && 'text-center',
    ]}
    >
      <Subheader
        title={artwork.data.title}
        date={artwork.data.date}
        isPost={true}
        links={links}
        subtitle={artwork.data.description}
        pages={Array.isArray(artwork.data.images) ? artwork.data.images.length : 1}
        backUrl="/art"
        backLabel="Back"
      />
    </div>

    <article class:list={[
      'animate',
      artwork.data.type === 'webcomic' && 'mb-12 md:mb-20',
    ]}
    >
      <Content />
      <div class="mt-8">
        {artwork.data.type === 'webcomic' && Array.isArray(artwork.data.images)
          ? (
            <WebcomicViewer
              images={artwork.data.images}
              title={artwork.data.title}
              description={artwork.data.description}
            />
          )
          : Array.isArray(artwork.data.images)
            ? (
              <div class="space-y-4">
                {artwork.data.images.map((image, index) => (
                  <Image
                    src={image}
                    alt={`${artwork.data.title} - Image ${index + 1}`}
                    class="w-full rounded-lg"
                    loading={index === 0 ? 'eager' : 'lazy'}
                    decoding="async"
                  />
                ))}
              </div>
            )
            : (
              <Image
                src={artwork.data.images}
                alt={artwork.data.title}
                class="w-full rounded-lg"
                loading="eager"
                decoding="async"
              />
            )}
      </div>
    </article>
  </Container>
</PageLayout>
