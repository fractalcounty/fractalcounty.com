---
import type { CollectionEntry } from 'astro:content'
import Container from '@/components/layout/Container.astro'
import Subheader from '@/components/layout/Subheader.astro'
import Link from '@/components/Link.astro'
import PostStructuredData from '@/components/meta/PostStructuredData.astro'
import ProfilePageStructuredData from '@/components/meta/ProfilePageStructuredData.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { readingTime } from '@/lib/utils'
import { getCollection } from 'astro:content'

export async function getStaticPaths() {
  const projects = (await getCollection('projects'))
    .filter(post => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  return projects.map(project => ({
    params: { slug: project.slug },
    props: project,
  }))
}
type Props = CollectionEntry<'projects'>

const project = Astro.props
const { Content } = await project.render()
const title = project.data.showInBlog && project.data.blogTitle
  ? project.data.blogTitle
  : project.data.title
const tags = project.data.tags || []
const links = project.data.links || []
---

<PageLayout
  title={title}
  description={project.data.description}
  type="article"
  publishedTime={project.data.date}
  tags={tags}
>
  <PostStructuredData
    slot="structured-data"
    entry={project}
    type="projects"
  />
  <ProfilePageStructuredData slot="structured-data" />
  <Container>
    <div class="my-10">
      <Subheader
        title={title}
        date={project.data.date}
        readingTime={readingTime(project.body)}
        isPost
        links={links}
        backUrl="/projects"
        backLabel="Back"
      />
    </div>
    <article class="animate">
      <Content components={{ a: Link }} />
    </article>
  </Container>
</PageLayout>
