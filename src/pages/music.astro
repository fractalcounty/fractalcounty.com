---
import Subheader from '@/components/layout/Subheader.astro'
import Link from '@/components/Link.astro'
import CollectionPageStructuredData from '@/components/meta/CollectionPageStructuredData.astro'
import MusicPageStructuredData from '@/components/meta/MusicPageStructuredData.astro'
import ProfilePageStructuredData from '@/components/meta/ProfilePageStructuredData.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { Image, Picture } from 'astro:assets'
import { getCollection } from 'astro:content'
import { Icon } from 'astro-icon/components'

// replace the spotify and lastfm functions with imports
import { fetchLastFmData } from '@/lib/lastfm'
import { getPlaylistDetails, getSpotifyToken } from '@/lib/spotify'

const LASTFM_USERNAME = 'fractalcounty'
const PLAYLIST_ID = '6mcNUOZBJVOl38rvUS5suh'

const spotifyToken = await getSpotifyToken()
const lastFmData = await fetchLastFmData(
  LASTFM_USERNAME,
  import.meta.env.LASTFM_API_KEY,
  spotifyToken
)
const playlistData = await getPlaylistDetails(PLAYLIST_ID, spotifyToken)

const { artists, albums, userInfo, topTracks } = lastFmData
const playlist = playlistData

const bandcampAlbums = await getCollection('music')
---

<PageLayout
  title={site.pages.music.title}
  description={site.pages.music.description}
>
  <MusicPageStructuredData
    slot='structured-data'
    lastFmData={lastFmData}
    bandcampAlbums={bandcampAlbums}
    playlist={playlist}
  />
  <CollectionPageStructuredData
    slot='structured-data'
    type='blog'
    name='Music'
    description='My music listening stats from Last.fm'
  />
  <ProfilePageStructuredData slot='structured-data' />

  <section>
    <div class='animate mb-12'>
      <Subheader
        class='mb-12 space-y-12'
        headingLevel='h1'
        title='Music'
        subtitle='my released albums & music projects'
        link={{
          text: 'Listen on Bandcamp',
          href: 'https://fractalcounty.bandcamp.com',
          icon: 'lucide:external-link',
        }}
      />

      <div class='grid grid-cols-2 gap-6 md:grid-cols-3'>
        {
          bandcampAlbums.map((album: any, index: number) => (
            <Link
              href={album.data.url}
              class={`animate group relative aspect-square overflow-hidden rounded-xl bg-base-300 shadow-md transition-all duration-150 hover:shadow-lg ${index >= 2 ? 'hidden md:block' : ''}`}
              underline={false}
              externalInNewTab={true}
            >
              <Image
                src={album.data.coverArt}
                alt={`${album.data.title} album art`}
                width={300}
                height={300}
                loading='eager'
                class='h-full w-full object-cover transition-transform duration-300 group-hover:scale-105'
              />
              <div class='absolute inset-0 bg-gradient-to-t from-base-100/90 via-base-100/40 to-transparent transition-all duration-300 group-hover:from-base-100/95 group-hover:via-base-100/50'>
                <div class='absolute inset-0 flex flex-col justify-end p-4'>
                  <div class='-space-y-0'>
                    <span class='inline-flex items-center gap-x-1 text-xs font-semibold text-primary opacity-0 transition-opacity duration-200 group-hover:opacity-100'>
                      {new Date(album.data.releaseDate).getFullYear()}
                    </span>
                    <h2 class='text-lg font-semibold text-base-content lg:text-sm'>
                      {album.data.title}
                    </h2>
                    {album.data.description && (
                      <p class='mt-1 text-sm text-base-content/80'>
                        {album.data.description}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            </Link>
          ))
        }
      </div>
    </div>

    <div class='space-y-12'>
      <Subheader
        title='last.fm'
        subtitle='my listening stats from last.fm'
        metadataPosition='bottom'
        headingLevel='h2'
        metadata={[
          {
            label: 'total plays',
            value: Number(userInfo?.playcount).toLocaleString(),
          },
          {
            label: 'scrobbling since',
            value: new Date(userInfo?.registered.unixtime * 1000).getFullYear(),
          },
          {
            label: 'profile',
            value: `@${LASTFM_USERNAME}`,
            url: `https://last.fm/user/${LASTFM_USERNAME}`,
          },
        ]}
      />

      <!-- top tracks grid -->
      <div class='space-y-4'>
        <div class='animate flex items-center gap-4'>
          <h3 class='font-semibold uppercase'>Top Tracks</h3>
          <div class='h-[1px] flex-1 bg-base-content/20'></div>
          <Link
            href={`https://www.last.fm/user/${LASTFM_USERNAME}/library/tracks`}
            class='text-sm hover:text-primary'
            externalInNewTab={true}
          >
            View All
          </Link>
        </div>

        <div class='animate grid gap-6'>
          {
            topTracks.map((track: any, index: number) => (
              <Link
                href={track.url}
                class='group relative aspect-square overflow-hidden rounded-xl bg-base-300 shadow-md transition-all duration-150 hover:shadow-lg'
                underline={false}
                externalInNewTab={true}
                data-index={index}
              >
                <Image
                  src={track.albumArt}
                  alt={`Album art for ${track.name} by ${track.artist.name}`}
                  width={300}
                  height={300}
                  inferSize
                  loading='eager'
                  class='h-full w-full object-cover transition-transform duration-300 group-hover:scale-105'
                />
                <div class='absolute inset-0 bg-gradient-to-t from-base-100/90 via-base-100/40 to-transparent transition-all duration-300 group-hover:from-base-100/95 group-hover:via-base-100/50'>
                  <div class='absolute inset-0 flex flex-col justify-end p-4'>
                    <div class='-space-y-0'>
                      <span class='inline-flex items-center gap-x-1 text-xs font-semibold text-primary opacity-0 transition-opacity duration-200 group-hover:opacity-100'>
                        {track.playcount} plays
                      </span>
                      <h4 class='text-lg font-semibold text-base-content lg:text-sm'>
                        {track.name}
                      </h4>
                      <p class='mt-1 text-sm text-base-content/80'>
                        {track.artist.name}
                      </p>
                    </div>
                  </div>
                </div>
              </Link>
            ))
          }
        </div>
      </div>

      <!-- top artists and albums columns -->
      <div class='grid w-full grid-cols-1 gap-6 md:grid-cols-2'>
        <!-- top artists -->
        <div class='w-full space-y-4'>
          <div class='animate flex items-center gap-4'>
            <h3 class='title font-bold uppercase'>Top Artists</h3>
            <div class='h-[1px] flex-1 bg-base-content/20'></div>
            <Link
              href={`https://www.last.fm/user/${LASTFM_USERNAME}/library/artists`}
              class='text-sm hover:text-primary'
              externalInNewTab={true}
            >
              View All
            </Link>
          </div>

          <div class='animate space-y-3'>
            {
              artists.map((artist: any) => (
                <Link
                  href={artist.url}
                  class='group flex h-[76px] w-full items-center gap-4 rounded-lg border border-base-content/25 bg-transparent p-3 shadow-md transition-all duration-200 hover:bg-neutral hover:shadow-lg'
                  underline={false}
                  externalInNewTab={true}
                >
                  <Image
                    src={
                      artist.image[3]['#text'] ||
                      artist.image[2]['#text'] ||
                      '/images/music/album-placeholder.webp'
                    }
                    alt={`${artist.name}`}
                    width={48}
                    height={48}
                    inferSize
                    class='size-12 flex-shrink-0 rounded-lg object-cover'
                  />
                  <div class='min-w-0 flex-1'>
                    <h4 class='line-clamp-1 font-medium group-hover:text-primary'>
                      {artist.name}
                    </h4>
                    <p class='line-clamp-1 text-sm text-base-content/80'>
                      {Number(artist.playcount).toLocaleString()} plays
                    </p>
                  </div>
                </Link>
              ))
            }
          </div>
        </div>

        <!-- top albums -->
        <div class='mb-12 w-full space-y-4'>
          <div class='animate flex items-center gap-4'>
            <h3 class='title font-bold uppercase'>Top Albums</h3>
            <div class='h-[1px] flex-1 bg-base-content/20'></div>
            <Link
              href={`https://www.last.fm/user/${LASTFM_USERNAME}/library/albums`}
              class='text-sm hover:text-primary'
              externalInNewTab={true}
            >
              View All
            </Link>
          </div>

          <div class='animate space-y-3'>
            {
              albums.map((album: any) => (
                <Link
                  href={album.url}
                  class='group flex h-[76px] w-full items-center gap-4 rounded-lg border border-base-content/25 bg-transparent p-3 shadow-md transition-all duration-200 hover:bg-neutral hover:shadow-lg'
                  underline={false}
                  externalInNewTab={true}
                >
                  <Image
                    src={
                      album.image[2]['#text'] ||
                      '/images/music/album-placeholder.webp'
                    }
                    alt={`${album.name} by ${album.artist.name}`}
                    width={48}
                    height={48}
                    inferSize
                    class='size-12 flex-shrink-0 rounded-lg object-cover'
                  />
                  <div class='min-w-0 flex-1'>
                    <h4 class='line-clamp-1 font-medium group-hover:text-primary'>
                      {album.name}
                    </h4>
                    <p class='line-clamp-1 text-sm text-base-content/80'>
                      {album.artist.name} •{' '}
                      {Number(album.playcount).toLocaleString()} plays
                    </p>
                  </div>
                </Link>
              ))
            }
          </div>
        </div>
      </div>

      <style>
        .animate.grid {
          grid-template-columns: repeat(2, 1fr);
        }

        @media (min-width: 768px) {
          .animate.grid {
            grid-template-columns: repeat(3, 1fr);
          }
        }
      </style>

      <script>
        // handle grid item animations
        document.addEventListener('astro:page-load', () => {
          const grid = document.querySelector('.grid')
          if (!grid) return

          const items = grid.querySelectorAll<HTMLElement>('[data-index]')
          items.forEach((item, index) => {
            const delay = Math.min(index * 50, 300)
            item.style.opacity = '0'
            item.style.transform = 'translateY(10px)'
            item.style.transition =
              'opacity 0.2s ease-out, transform 0.2s ease-out'

            setTimeout(() => {
              item.style.opacity = '1'
              item.style.transform = 'translateY(0)'
            }, delay)
          })
        })
      </script>
    </div>

    <!-- spotify section -->
    <section class='animate space-y-12 pb-12'>
      <div class='flex items-center justify-between'>
        <Subheader
          title='Featured Playlist'
          subtitle='my favorite music on Spotify'
          headingLevel='h2'
        />
        <Link
          href={`https://open.spotify.com/playlist/${PLAYLIST_ID}`}
          class='inline-flex items-center gap-2 text-sm'
          externalInNewTab={true}
        >
          Listen on Spotify
          <Icon name='lucide:external-link' class='size-4' />
        </Link>
      </div>

      <div
        id='customView'
        class='space-y-4 rounded-xl border border-base-content/25 p-4 shadow-md hover:shadow-lg'
      >
        {
          playlist && (
            <div class='animate space-y-4'>
              <div class='flex gap-6'>
                {/* playlist thumbnail artwork image */}
                <div class='relative h-[150px] w-[149.5px] flex-shrink-0'>
                  <Picture
                    src={playlist.image}
                    alt={playlist.name}
                    width={259}
                    height={259}
                    widths={[129, 259]}
                    sizes='149px'
                    class='absolute inset-0 h-full w-full rounded-lg border border-base-content/15 object-cover shadow-md'
                    style={{
                      aspectRatio: '1/1',
                      objectFit: 'cover',
                    }}
                    loading='lazy'
                  />
                </div>
                <div class='flex flex-col justify-center'>
                  <h3 class='font-brand text-xl font-bold'>{playlist.name}</h3>
                  <p
                    class='text-base-content/75'
                    set:html={playlist.description}
                  />
                </div>
              </div>

              <div class='divider' />

              <div class='h-[200px] space-y-2 overflow-y-auto pr-2'>
                {playlist.tracks.map((track: any) => (
                  <Link
                    href={track.external_url}
                    class='group flex items-center gap-3 rounded-lg p-2 transition-colors hover:bg-base-300'
                    underline={false}
                    externalInNewTab={true}
                  >
                    <Image
                      src={track.image}
                      alt={track.name}
                      width={48}
                      height={48}
                      class='size-12 rounded border border-base-content/25 object-cover shadow-sm'
                      loading='lazy'
                    />
                    <div class='min-w-0 flex-1'>
                      <h4 class='line-clamp-1 font-medium group-hover:text-primary'>
                        {track.name}
                      </h4>
                      <p class='line-clamp-1 text-sm text-base-content/80'>
                        {track.artist}
                      </p>
                    </div>
                    <span class='text-sm text-base-content/60'>
                      {`${Math.floor(track.duration / 60000)}:${String(
                        Math.floor((track.duration % 60000) / 1000)
                      ).padStart(2, '0')}`}
                    </span>
                  </Link>
                ))}
              </div>
            </div>
          )
        }
      </div>
    </section>
  </section>
</PageLayout>
